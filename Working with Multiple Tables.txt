--	Exercise 2: Accessing Multiple Tables with Sub-Queries

-- Problem 1: Retrieve only the EMPLOYEES records that correspond to jobs in the JOBS table.
--select * from employees
--where job_id in (select job_ident from jobs);

-- Problem 2: Retrieve only the list of employees whose JOB_TITLE is Jr. Designer.
--select * from employees
--where job_id in (select job_ident from jobs
--where job_title = 'Jr. Designer');

-- Problem 3: Retrieve JOB information and who earn more than $70,000.
--select * from jobs
--where job_ident in (select job_id from employees
--where salary > 70000);

-- Problem 4: Retrieve JOB information and whose birth year is after 1976.
--select * from jobs
--where job_ident in (select job_id from employees
--where year(b_date) > 1976);

-- Problem 5: Retrieve JOB information for female employees whose birth year is after 1976.
--select * from jobs
--where job_ident in (select job_id from 
--(select * from employees
--where year(b_date) > 1976)
--where sex = 'F');

--select * from jobs
--where job_ident in (select job_id from employees
--where year(b_date) > 1976 and sex = 'F');

--	Exercise 2: Accessing Multiple Tables with Implicit Joins

-- Problem 1: Perform an implicit cartesian/cross join between EMPLOYEES and JOBS tables.
--select * from jobs, employees;

-- Problem 2: Retrieve only the EMPLOYEES records that correspond to jobs in the JOBS table.
--select * from employees, jobs
--where employees.job_id = jobs.job_ident;

-- Problem 3: Redo the previous query, using shorter aliases for table names.
--select * from employees E, jobs J
--where E.job_id = J.job_ident;

-- Problem 4: Redo the previous query, but retrieve only the Employee ID, Employee Name and Job Title.
--select emp_id, f_name, l_name, job_title from employees E, jobs J
--where E.job_id = J.job_ident;

-- Problem 5: Redo the previous query, but specify the fully qualified column names with aliases in the SELECT clause.
select E.emp_id, E.f_name, E.l_name, J.job_title from employees E, jobs J
where E.job_id = J.job_ident
